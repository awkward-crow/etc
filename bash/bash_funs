# bash_funs

function uh () {
    if [ -n "${1}" ]; then
        mkdir $1
        cd $1
    else
        echo "Too few args"
    fi 
}

function ff () {
    if [ -n "${1}" ] && [ -n "${2}" ]; then
        find $2 -name $1
    else 
        if [ -n "${1}" ]; then
            find . -name $1
        else
            echo "Too few args"
        fi      
    fi
}

function i () {
    if [ $# -eq 1 ]; then
        ft=$(file -b --mime-type $1)
        if [ $ft = 'application/pdf' ]; then
            zathura $1 &
        else
            nvim -R $1
        fi
    else
        echo "What? No file?"
    fi
}

function e () {
    if [ $# -eq 1 ]; then
        nvim $1
    fi
}


function u () {
    if [ $# -eq 1 ]; then
        ft=$(file -b --mime-type $1)
        if [ $ft = 'application/pdf' ]; then
            zathura $1 &
        else
            less -X $1;
        fi
    else
        eval $* | less -X;
    fi
}

function o () {
    eval $* | less -X
}

function oo () {
    eval $* 2>&1 | less -X
}

function ooo() {
    eval $* 2> >(ifne page_stderr.sh) | less -X
}

function t () {
    if [ -n "${1}" ] && [ -n "${2}" ]; then
        ls -$2 $1
    else 
        if [ -n "${1}" ]; then
            ls -CF $1
        else
            ls -CF
        fi 
    fi
}

function h () {
    if [ -n "${1}" ] && [ -n "${2}" ]; then
        cd $1
        ls -$2
    else 
        if [ -n "${1}" ]; then
            cd $1
            ls -CF 
        else
            cd ~
        fi 
    fi
}

function n () {
    if [ -n "${1}" ]; then
        cd ..
        ls -$1
    else
        cd ..
        ls -CF 
    fi
}

function hh () {
    if [ -n "${1}" ] && [ -n "${2}" ]; then
        pushd $1
        ls -$2
    else 
        if [ -n "${1}" ]; then
            pushd $1
            ls -CF 
        else
            popd 
            ls -CF 
        fi 
    fi
}


function j () {
    urxvt &
}


### end
